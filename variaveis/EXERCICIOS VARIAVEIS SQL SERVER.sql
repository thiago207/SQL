--1. Declare 4 variáveis inteiras. Atribua os seguintes valores a elas:
--valor1 = 10
--valor2 = 5
--valor3 = 34
--valor4 = 7

DECLARE 
	@valor1 float = 10,
	@valor2  float = 5,
	@valor3 float = 34,
	@valor4 float = 7


--a) Crie uma nova variável para armazenar o resultado da soma entre valor1 e valor2. Chame essa variável de soma.

declare 
	@soma_valor1_valor2 int = @valor1 + @valor2
print @soma_valor1_valor2

--b) Crie uma nova variável para armazenar o resultado da subtração entre valor3 e valor 4.
--Chame essa variável de subtracao.
declare 
	@sub int = @valor3 - @valor4
print @sub


--c) Crie uma nova variável para armazenar o resultado da multiplicação entre o valor 1 e o
--valor4. Chame essa variável de multiplicacao.
declare 
	@mut int = @valor1 * @valor4
print @mut

--d) Crie uma nova variável para armazenar o resultado da divisão do valor3 pelo valor4. Chame
--essa variável de divisao. Obs: O resultado deverá estar em decimal, e não em inteiro.
declare 
	@div float = @valor3 / @valor4
select round(@div, 2)



--2. Para cada declaração das variáveis abaixo, atenção em relação ao tipo de dado que deverá ser
--especificado.


--a) Declare uma variável chamada ‘produto’ e atribua o valor de ‘Celular’.
declare 
	@produto varchar(30) = 'Celualar' 

--b) Declare uma variável chamada ‘quantidade’ e atribua o valor de 12.
declare 
	@quantidade int = 12
--c) Declare uma variável chamada ‘preco’ e atribua o valor 9.99.
declare 
	@preco float = 9.99
--d) Declare uma variável chamada ‘faturamento’ e atribua o resultado da multiplicação entre
--‘quantidade’ e ‘preco’.
declare 
	@faturamento float = @preco * @quantidade
--e) Visualize o resultado dessas 4 variáveis em uma única consulta, por meio do SELECT.
select 
	@produto,
	@quantidade,
	@preco,
	@faturamento



--3. Você é responsável por gerenciar um banco de dados onde são recebidos dados externos de usuários. Em resumo, esses dados são:

-- - Nome do usuário
-- - Data de nascimento
-- - Quantidade de pets que aquele usuário possui


--Você precisará criar um código em SQL capaz de juntar as informações fornecidas por este usuário. 
--Para simular estes dados, crie 3 variáveis, chamadas: nome, data_nascimento e num_pets. Você deverá armazenar os valores respectivamente.
declare 
	@nome varchar(10) = 'Thiago',
	@data_nascimento datetime = '20/07/2007',
	@num_pets int = 2

select 
	'Meu nome é: ' + @nome + ' nasci em '+ FORMAT(@data_nascimento, 'dd/MM/yyyy') + ' tenho ' + cast(@num_pets as varchar) + ' pets.'
--Dica: você precisará utilizar as funções CAST e FORMAT para chegar no resultado.


--4. Você acabou de ser promovido e o seu papel será realizar um controle de qualidade sobre as lojas da empresa.

--A primeira informação que é passada a você é que o ano de 2008 foi bem complicado para a empresa, pois foi quando duas das principais lojas fecharam. O seu primeiro desafio é descobrir
--o nome dessas lojas que fecharam no ano de 2008, para que você possa entender o motivo e
--mapear planos de ação para evitar que outras lojas importantes tomem o mesmo caminho.
--O seu resultado deverá estar estruturado em uma frase, com a seguinte estrutura:

--‘As lojas fechadas no ano de 2008 foram: ’ + nome_das_lojas

--Obs: utilize o comando PRINT (e não o SELECT!) para mostrar o resultado.

declare 
	@LOJAS_2008 varchar(max)
set	@LOJAS_2008 = ''

select
	@LOJAS_2008  = @LOJAS_2008 + StoreName + ', '
from 
	DimStore 
where year(LoadDate) = '2008'

print 'As lojas fechadas no ano de 2008 foram: ' + @LOJAS_2008

--5. Você precisa criar uma consulta para mostrar a lista de produtos da tabela DimProduct para
--uma subcategoria específica: ‘Lamps’.

--Utilize o conceito de variáveis para chegar neste resultado.

select * from DimProductSubcategory

select * from DimProduct



select 
	p.ProductName,
	s.ProductSubcategoryName
from 
	DimProductSubcategory as s
inner join DimProduct as p
on s.ProductSubcategoryKey = p.ProductSubcategoryKey
where s.ProductSubcategoryName = 'Lamps'
group by s.ProductSubcategoryName, p.ProductName
